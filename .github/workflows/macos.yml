name: macOS
on:
  - push
  - pull_request
env:
  build_type: Release
  native_deps: nasm yasm cmake ccache

jobs:
  build:
    runs-on: macos-10.15
    env:
      CC: clang
      CXX: clang++
      generator: Xcode
    steps:
    - name: Install dependencies
      run: |
        brew update
        brew install yasm ccache python || true
        echo "::set-env name=PATH::/usr/local/opt/ccache/libexec:$PATH"
        clang -v
        clang++ -v
    - name: Print system info
      run: |
        sysctl -n machdep.cpu.brand_string
        sysctl machdep.cpu.features
        sysctl machdep.cpu.leaf7_features
    - uses: actions/checkout@v2
    - name: Cache ccache files
      uses: actions/cache@v1.1.2
      with:
        path: ~/.ccache
        key: ${{ runner.os }}-svt-av1-clang-${{ hashFiles('**/*.c') }}
        restore-keys: |
          ${{ runner.os }}-svt-av1-clang-
    - name: Run CMake
      run: cmake -S "$GITHUB_WORKSPACE" -B Build -G"${generator:=Unix Makefiles}" -DCMAKE_BUILD_TYPE="${build_type:=Release}" $CMAKE_EFLAGS

    - name: Run Build
      run: cmake --build Build --parallel 4 --config "${build_type:=Release}"

    - name: Install
      run: sudo cmake --build Build --config "${build_type:=Release}" --target install

  unit-tests:
    runs-on: [self-hosted, macos]
    env:
      CC: 'ccache gcc'
      CXX: 'ccache g++'
      # Build unit tests
      testing: 'ON'
      NOTROOT: 1
    name: 'Unit Tests (MacOS, GCC)'
    steps:
      - name: Install dependencies
        run: |
          brew update
          brew install ${native_deps}
      - uses: actions/checkout@v2
      - name: Cache ccache files
        uses: actions/cache@v1.1.2
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-unit-tests-${{ hashFiles('**/*.c') }}
          restore-keys: ${{ runner.os }}-unit-tests-
      - name: Compile SVT-AV1 (Release, Tests)
        run: |
          chmod +x .ci/ci.sh
          .ci/ci.sh
      - name: Run unit tests
        run: |
          export GTEST_TOTAL_SHARDS=10
          seq 0 $(( $GTEST_TOTAL_SHARDS - 1 )) | xargs -n 1 -P 10 -I{} env GTEST_SHARD_INDEX={} ./Bin/Release/SvtAv1UnitTests
          unset GTEST_TOTAL_SHARDS

  e2e-tests:
    runs-on: [self-hosted, macos]
    env:
      CC: 'ccache gcc'
      CXX: 'ccache g++'
      # Build unit tests
      testing: 'ON'
      NOTROOT: 1
    name: 'E2E Tests (MacOS, GCC)'
    steps:
      - name: Install dependencies
        run: |
          brew update
          brew install ${native_deps}
      - uses: actions/checkout@v2
      - name: Cache ccache files
        uses: actions/cache@v1.1.2
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-e2e-${{ hashFiles('**/*.c') }}
          restore-keys: ${{ runner.os }}-e2e-
      - name: Compile SVT-AV1 (Release, Tests and TestVectors)
        run: |
          chmod +x .ci/ci.sh
          .ci/ci.sh
          pushd ./Build/linux/Release
          make TestVectors
          popd
      - name: Run e2e tests
        run: env SVT_AV1_TEST_VECTOR_PATH="./test/vectors" ./Bin/Release/SvtAv1E2ETests --gtest_filter=-*DummySrcTest*
